/* ==========================================================================
	 BLOCK EDITOR GENERATED STYLES
	 ========================================================================== */

// A lot of time went into testing this and making it work with 3rd party blocks and get nesting of blocks to work, any changes here should be really tested and considered before modifying.

$paddingHorizontal: 25px; 
.editor-content {
 
  padding: 0 $paddingHorizontal;
}


.editor-content > *  { 
  max-width: $wrapper-width-base;
  margin-left: auto;
  margin-right: auto;
  > div[class*="wp-block"] {
    max-width: $wrapper-width-base;
    margin-left: auto;
    margin-right: auto;
  }
}

.editor-content > .alignwide, .editor-content > .is-style-alignwide {
  width: $wrapper-width-wide;
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  > div[class*="wp-block"] {
    max-width: $wrapper-width-base;
    margin-left: auto;
    margin-right: auto;
  }
  > div[class*="wp-block"].alignwide {
    width: $wrapper-width-wide;
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
  }
}

.editor-content > .alignfull {
  transform: translateX(calc(0px - #{$paddingHorizontal}));
  width: calc(100% + 2 * #{$paddingHorizontal});
  max-width: 100vw;
  margin-left: auto;
  margin-right: auto;

  > div[class*="wp-block"] {
    max-width: $wrapper-width-base;
    margin-left: auto;
    margin-right: auto;
    &.alignwide {
      width: $wrapper-width-wide;
      max-width: 100%;
      margin-left: auto;
      margin-right: auto;
    }
  }
  // used when alignfull content has bg image that is position fixed.
  &.parafull {
    transform: none;
    left: -25px;
  }
}

.editor-content > .gb-container.alignfull {
  padding-left: 25px;
  padding-right: 25px;
  position: relative;

 }


.aligncenter {
  text-align: center;
  justify-content: center;
}

.editor-content .alignleft {
  float: left;
  margin-right: 2em;
  max-width: 360px;
}

.editor-content .alignright {
  float: right;
  margin-left: 2em;
  max-width: 360px;
}       

.is-style-secondaryfont {
  font-family: $font-secondary;
}

// ++ table block ++++++++++++++++++++++++++++
.wp-block-table {
  margin-top: 30px;
  padding: 2px;
  & th {
    text-align: left;
  }
  & th, & td {
    border: none;
    padding: 20px;
    line-height: 1.2;
  }
  & tr:first-of-type {
    text-align: left;
    border-top: 1px solid #333;
  }
  & tr {
    border-top: 1px solid #333;
    & td {
      border: 1px solid #333;
    }
  }
  thead {
    border-bottom: 1px solid #333 !important;
    tr {
      th {
        font-size: 18px;
        border: 1px solid #333; 
      }
    }
  } 
  &.is-style-stripes {
    & tr {
      border-top: none;
    }
    thead {
      tr {
        border: none;
        th {
          border: none;
        }
      }
    }
  }
}



// ++ ul list block (with custom class added) +++++++++++++++++++++++++++++++++
.editor-content ul:not([class^="wpforms-"]) {
  list-style-type: none;
  margin: 1rem 0 1rem 20px;
  padding: 0;
  overflow: hidden;
  @media(width >= $bp-large) {
  margin-left: 30px;
  } 
}
.editor-content ul:not([class^="wpforms-"]) li {
  margin: 0;
  padding: 0 0 10px 12px;
  position: relative;
  font-size: clamped(16px, 18px);
}
.editor-content ul:not([class^="wpforms"]) li::before {
  display: block; 
  background-color: currentColor;
  content: "";
	position: absolute;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  top: 0.58em;
  left: 0;
}

.wpforms-field li::before {
  display: none !important;
}

.wpforms-field li {
  padding-left: 0 !important;
}

.wpforms-field ul  {
  display: inline-flex !important;
  flex-direction: column !important;
  margin-left: 0 !important;
  li {
    display: block !important;
  }
}

.editor-content  .stk-block-icon-list  ul {
 overflow: visible; 

  li {
    &::before {
      display: none;
    }
  }
}


// ++ ol list block (with custom class added) +++++++++++++++++++++++++++++++++
.editor-content ol {
  counter-reset: item;
  margin: 1rem 0 1rem 30px;
  padding: 0;
  overflow: hidden;
}
.editor-content ol > li {
  padding: 0 0 0.5rem 1.4rem;
  position: relative;
  text-indent: -1.4rem;
}
.editor-content ol > li::before {
  content: counter(item)'.';
  counter-increment: item;
  color: $color-black;
  font-weight: 400;
  position: relative;
	top: 0;
	width: 1.3rem;
	margin: 0 0.4rem 0 0;
}



//buttons
.wp-block-buttons .wp-block-button:last-of-type {
  margin-right: 0;
}

// WP Columns
// lets match columns to our break points.
body .wp-block-column {
  @media(width <=$bp-medium) {
    flex-basis: 100% !important;
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
}
// wp-5.7 fix
body .wp-block-column:not(:only-child) {
  @media(width <=$bp-medium) {
    flex-basis: 100% !important;
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
}

 // prevent wide columns not having a gutter
 .editor-content .wp-block-column:not(:first-child) {
  @media(width >= $bp-medium) {
    margin-left: 2em;
  } 
}

// we need a no gutter style
.is-style-no-gutter {
  .wp-block-column {
    margin-left: 0;
    margin-right: 0;
  }
}


body .u-break-early {
	@media(width <=$bp-large) {
	flex-direction: column;
   .wp-block-column {
	  flex-basis: 100% !important;
	  max-width: 100%;
	  margin: 0 0 25px 0 !important;
	}
   }
  }


  .has-large-font-size {
    line-height: 1.25;
  }

  .has-small-font-size {
  line-height: 1.8;
  }

  .wp-block-image {
    margin-bottom: 10px;
    margin-top: 10px;
  }